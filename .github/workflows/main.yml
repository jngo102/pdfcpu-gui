name: Build and Publish
on: [push, pull_request]

jobs:
  create-release:
        runs-on: ubuntu-latest
        outputs:
            RELEASE_UPLOAD_URL: ${{ steps.create_release.outputs.id.upload_url }}

        steps:
            - uses: actions/checkout@v3
            - name: Get app version
              run: echo "APP_VERSION=$(node -p "require('./frontend/package.json').version")" >> $GITHUB_ENV
            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ env.APP_VERSION }}
                  release_name: "pdfcpu-gui v${{ env.APP_VERSION }}"
                  body: "pdfcpu-gui has released another version.\n\nChangelog:\n-"
                  draft: false
                  prerelease: true
  build-wails:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        build: [
          { name: pdfcpu-gui, os: ubuntu-latest, platform: linux/amd64 },
          { name: pdfcpu-gui, os: macos-latest, platform: darwin/universal },
          { name: pdfcpu-gui, os: windows-latest, platform: windows/amd64 },
        ]
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Wails build action
        uses: dAppServer/wails-build-action@v2
        with:
          build-name: ${{ matrix.build.name }}
          build-platform: ${{ matrix.build.platform }}
      - name: Publish binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: application/octet-stream
          asset_name: ${{ matrix.build.name }}
          asset_path: ./build/bin/${{ matrix.build.name }}
          upload_url: ${{ needs.create-release.outputs.RELEASE_UPLOAD_URL }}
